'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getGettextInstance = require('../getGettextInstance.js');

var _getGettextInstance2 = _interopRequireDefault(_getGettextInstance);

var _contextTypes = require('../contextTypes.js');

var contextTypes = _interopRequireWildcard(_contextTypes);

var _pubsub = require('../pubsub.js');

var _translators = require('../translators.js');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Localization context provider
 */
var LionessProvider = function (_Component) {
  _inherits(LionessProvider, _Component);

  function LionessProvider(props) {
    _classCallCheck(this, LionessProvider);

    var _this = _possibleConstructorReturn(this, (LionessProvider.__proto__ || Object.getPrototypeOf(LionessProvider)).call(this, props));

    var options = props.debug === null ? {} : { debug: props.debug };
    _this.gt = (0, _getGettextInstance2.default)(props.messages, props.locale, options);
    return _this;
  }

  /**
   * Set the locale when receiving new props
   */


  // Child context types

  // Prop types


  _createClass(LionessProvider, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (prevProps.locale !== this.props.locale) {
        this.gt.setLocale(this.props.locale);
        (0, _pubsub.emit)();
      }
      if (prevProps.messages !== this.props.messages) {
        (0, _pubsub.emit)();
      }
    }

    /**
     * Translator functions are curried, so we return a set of functions
     * which all have been given a translation function.
     */

  }, {
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        locale: this.props.locale,
        t: (0, _translators.t)(this.gt.gettext.bind(this.gt)),
        tn: (0, _translators.tn)(this.gt.ngettext.bind(this.gt)),
        tp: (0, _translators.tp)(this.gt.pgettext.bind(this.gt)),
        tnp: (0, _translators.tnp)(this.gt.npgettext.bind(this.gt)),
        tc: (0, _translators.tc)(this.gt.gettext.bind(this.gt)),
        tcn: (0, _translators.tcn)(this.gt.ngettext.bind(this.gt)),
        tcp: (0, _translators.tcp)(this.gt.pgettext.bind(this.gt)),
        tcnp: (0, _translators.tcnp)(this.gt.npgettext.bind(this.gt)),
        transformInput: this.props.transformInput
      };
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.Children.only(this.props.children);
    }
  }]);

  return LionessProvider;
}(_react.Component);

LionessProvider.propTypes = {
  messages: _propTypes2.default.object.isRequired,
  locale: _propTypes2.default.string.isRequired,
  transformInput: _propTypes2.default.func,
  children: _propTypes2.default.node.isRequired,
  debug: _propTypes2.default.bool
};
LionessProvider.defaultProps = {
  transformInput: function transformInput(x) {
    return x;
  },
  debug: null };
LionessProvider.childContextTypes = _extends({}, contextTypes);
exports.default = LionessProvider;