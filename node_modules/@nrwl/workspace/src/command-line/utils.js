"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const yargsParser = require("yargs-parser");
const runOne = [
    'target',
    'configuration',
    'prod',
    'runner',
    'parallel',
    'maxParallel',
    'max-parallel',
    'exclude',
    'onlyFailed',
    'only-failed',
    'verbose',
    'help',
    'version',
    'withDeps',
    'with-deps',
    'skipNxCache',
    'skip-nx-cache',
];
const runMany = [...runOne, 'projects', 'quiet', 'all'];
const runAffected = [
    ...runOne,
    'untracked',
    'uncommitted',
    'all',
    'base',
    'head',
    'files',
    'quiet',
    'plain',
    'select',
];
const ignoreArgs = ['$0', '_'];
function splitArgsIntoNxArgsAndOverrides(args, mode) {
    const nxSpecific = mode === 'run-one' ? runOne : mode === 'run-many' ? runMany : runAffected;
    const nxArgs = {};
    const overrides = yargsParser(args._);
    delete overrides._;
    Object.entries(args).forEach(([key, value]) => {
        if (nxSpecific.includes(key)) {
            nxArgs[key] = value;
        }
        else if (!ignoreArgs.includes(key)) {
            overrides[key] = value;
        }
    });
    if (mode === 'run-many') {
        if (!nxArgs.projects) {
            nxArgs.projects = [];
        }
        else {
            nxArgs.projects = args.projects.split(',').map((p) => p.trim());
        }
    }
    if (nxArgs.prod) {
        delete nxArgs.prod;
        nxArgs.configuration = 'production';
    }
    if (mode === 'affected') {
        if (!nxArgs.files &&
            !nxArgs.uncommitted &&
            !nxArgs.untracked &&
            !nxArgs.base &&
            !nxArgs.head &&
            !nxArgs.all &&
            args._.length >= 2) {
            nxArgs.base = args._[0];
            nxArgs.head = args._[1];
        }
        else if (!nxArgs.base) {
            nxArgs.base = 'master';
        }
    }
    if (!nxArgs.skipNxCache) {
        nxArgs.skipNxCache = false;
    }
    return { nxArgs, overrides };
}
exports.splitArgsIntoNxArgsAndOverrides = splitArgsIntoNxArgsAndOverrides;
//# sourceMappingURL=utils.js.map