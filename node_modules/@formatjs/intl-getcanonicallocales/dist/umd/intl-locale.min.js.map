{"version":3,"file":"intl-locale.min.js","sources":["../../lib/parser.js","../../lib/emitter.js","../../lib/aliases.js","../../lib/canonicalizer.js","../../lib/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar ALPHANUM_1_8 = /^[a-z0-9]{1,8}$/i;\nvar ALPHANUM_2_8 = /^[a-z0-9]{2,8}$/i;\nvar ALPHANUM_3_8 = /^[a-z0-9]{3,8}$/i;\nvar KEY_REGEX = /^[a-z0-9][a-z]$/i;\nvar TYPE_REGEX = /^[a-z0-9]{3,8}$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n// alphanum-[tTuUxX]\nvar OTHER_EXTENSION_TYPE = /^[0-9a-svwyz]$/i;\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar UNICODE_VARIANT_SUBTAG_REGEX = /^([a-z0-9]{5,8}|[0-9][a-z0-9]{3})$/i;\nvar UNICODE_LANGUAGE_SUBTAG_REGEX = /^([a-z]{2,3}|[a-z]{5,8})$/i;\nvar TKEY_REGEX = /^[a-z][0-9]$/i;\nexport var SEPARATOR = '-';\nexport function isUnicodeLanguageSubtag(lang) {\n    return UNICODE_LANGUAGE_SUBTAG_REGEX.test(lang);\n}\nexport function isStructurallyValidLanguageTag(tag) {\n    try {\n        parseUnicodeLanguageId(tag.split(SEPARATOR));\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexport function isUnicodeRegionSubtag(region) {\n    return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\nexport function isUnicodeScriptSubtag(script) {\n    return ALPHA_4.test(script);\n}\nexport function isUnicodeVariantSubtag(variant) {\n    return UNICODE_VARIANT_SUBTAG_REGEX.test(variant);\n}\nexport function parseUnicodeLanguageId(chunks) {\n    if (typeof chunks === 'string') {\n        chunks = chunks.split(SEPARATOR);\n    }\n    var lang = chunks.shift();\n    if (!lang) {\n        throw new RangeError('Missing unicode_language_subtag');\n    }\n    if (lang === 'root') {\n        return { lang: 'root', variants: [] };\n    }\n    // unicode_language_subtag\n    if (!isUnicodeLanguageSubtag(lang)) {\n        throw new RangeError('Malformed unicode_language_subtag');\n    }\n    var script;\n    // unicode_script_subtag\n    if (isUnicodeScriptSubtag(chunks[0])) {\n        script = chunks.shift();\n    }\n    var region;\n    // unicode_region_subtag\n    if (isUnicodeRegionSubtag(chunks[0])) {\n        region = chunks.shift();\n    }\n    var variants = {};\n    while (chunks.length && isUnicodeVariantSubtag(chunks[0])) {\n        var variant = chunks.shift();\n        if (variant in variants) {\n            throw new RangeError(\"Duplicate variant \\\"\" + variant + \"\\\"\");\n        }\n        variants[variant] = 1;\n    }\n    return {\n        lang: lang,\n        script: script,\n        region: region,\n        variants: Object.keys(variants),\n    };\n}\nfunction parseUnicodeExtension(chunks) {\n    var keywords = [];\n    var keyword;\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length) {\n        return {\n            type: 'u',\n            keywords: keywords,\n            attributes: [],\n        };\n    }\n    // Mix of attributes & keywords\n    // Check for attributes first\n    var attributes = [];\n    while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n        attributes.push(chunks.shift());\n    }\n    while (chunks.length && (keyword = parseKeyword(chunks))) {\n        keywords.push(keyword);\n    }\n    if (keywords.length || attributes.length) {\n        return {\n            type: 'u',\n            attributes: attributes,\n            keywords: keywords,\n        };\n    }\n    throw new RangeError('Malformed unicode_extension');\n}\nfunction parseKeyword(chunks) {\n    var key;\n    if (!KEY_REGEX.test(chunks[0])) {\n        return;\n    }\n    key = chunks.shift();\n    var type = [];\n    while (chunks.length && TYPE_REGEX.test(chunks[0])) {\n        type.push(chunks.shift());\n    }\n    var value = '';\n    if (type.length) {\n        value = type.join(SEPARATOR);\n    }\n    return [key, value];\n}\nfunction parseTransformedExtension(chunks) {\n    var lang;\n    try {\n        lang = parseUnicodeLanguageId(chunks);\n    }\n    catch (e) {\n        // Try just parsing tfield\n    }\n    var fields = [];\n    while (chunks.length && TKEY_REGEX.test(chunks[0])) {\n        var key = chunks.shift();\n        var value = [];\n        while (chunks.length && ALPHANUM_3_8.test(chunks[0])) {\n            value.push(chunks.shift());\n        }\n        if (!value.length) {\n            throw new RangeError(\"Missing tvalue for tkey \\\"\" + key + \"\\\"\");\n        }\n        fields.push([key, value.join(SEPARATOR)]);\n    }\n    if (fields.length) {\n        return {\n            type: 't',\n            fields: fields,\n            lang: lang,\n        };\n    }\n    throw new RangeError('Malformed transformed_extension');\n}\nfunction parsePuExtension(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_1_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return {\n            type: 'x',\n            value: exts.join(SEPARATOR),\n        };\n    }\n    throw new RangeError('Malformed private_use_extension');\n}\nfunction parseOtherExtensionValue(chunks) {\n    var exts = [];\n    while (chunks.length && ALPHANUM_2_8.test(chunks[0])) {\n        exts.push(chunks.shift());\n    }\n    if (exts.length) {\n        return exts.join(SEPARATOR);\n    }\n    return '';\n}\nfunction parseExtensions(chunks) {\n    if (!chunks.length) {\n        return { extensions: [] };\n    }\n    var extensions = [];\n    var unicodeExtension;\n    var transformedExtension;\n    var puExtension;\n    var otherExtensionMap = {};\n    do {\n        var type = chunks.shift();\n        switch (type) {\n            case 'u':\n            case 'U':\n                if (unicodeExtension) {\n                    throw new RangeError('There can only be 1 -u- extension');\n                }\n                unicodeExtension = parseUnicodeExtension(chunks);\n                extensions.push(unicodeExtension);\n                break;\n            case 't':\n            case 'T':\n                if (transformedExtension) {\n                    throw new RangeError('There can only be 1 -t- extension');\n                }\n                transformedExtension = parseTransformedExtension(chunks);\n                extensions.push(transformedExtension);\n                break;\n            case 'x':\n            case 'X':\n                if (puExtension) {\n                    throw new RangeError('There can only be 1 -x- extension');\n                }\n                puExtension = parsePuExtension(chunks);\n                extensions.push(puExtension);\n                break;\n            default:\n                if (!OTHER_EXTENSION_TYPE.test(type)) {\n                    throw new RangeError('Malformed extension type');\n                }\n                if (type in otherExtensionMap) {\n                    throw new RangeError(\"There can only be 1 -\" + type + \"- extension\");\n                }\n                var extension = {\n                    type: type,\n                    value: parseOtherExtensionValue(chunks),\n                };\n                otherExtensionMap[extension.type] = extension;\n                extensions.push(extension);\n                break;\n        }\n    } while (chunks.length);\n    return { extensions: extensions };\n}\nexport function parseUnicodeLocaleId(locale) {\n    var chunks = locale.split(SEPARATOR);\n    var lang = parseUnicodeLanguageId(chunks);\n    return __assign({ lang: lang }, parseExtensions(chunks));\n}\n//# sourceMappingURL=parser.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nexport function emitUnicodeLanguageId(lang) {\n    if (!lang) {\n        return '';\n    }\n    return __spreadArrays([lang.lang, lang.script, lang.region], (lang.variants || [])).filter(Boolean)\n        .join('-');\n}\nexport function emitUnicodeLocaleId(_a) {\n    var lang = _a.lang, extensions = _a.extensions;\n    var chunks = [emitUnicodeLanguageId(lang)];\n    for (var _i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n        var ext = extensions_1[_i];\n        chunks.push(ext.type);\n        switch (ext.type) {\n            case 'u':\n                chunks.push.apply(chunks, __spreadArrays(ext.attributes, ext.keywords.reduce(function (all, kv) { return all.concat(kv); }, [])));\n                break;\n            case 't':\n                chunks.push.apply(chunks, __spreadArrays([emitUnicodeLanguageId(ext.lang)], ext.fields.reduce(function (all, kv) { return all.concat(kv); }, [])));\n                break;\n            default:\n                chunks.push(ext.value);\n                break;\n        }\n    }\n    return chunks.filter(Boolean).join('-');\n}\n//# sourceMappingURL=emitter.js.map","/* @generated */\n// prettier-ignore  \nexport var languageAlias = { \"aa-SAAHO\": \"ssy\", \"aam\": \"aas\", \"aar\": \"aa\", \"abk\": \"ab\", \"adp\": \"dz\", \"afr\": \"af\", \"aju\": \"jrb\", \"aka\": \"ak\", \"alb\": \"sq\", \"als\": \"sq\", \"amh\": \"am\", \"ara\": \"ar\", \"arb\": \"ar\", \"arg\": \"an\", \"arm\": \"hy\", \"art-lojban\": \"jbo\", \"asd\": \"snz\", \"asm\": \"as\", \"aue\": \"ktz\", \"ava\": \"av\", \"ave\": \"ae\", \"aym\": \"ay\", \"ayr\": \"ay\", \"ayx\": \"nun\", \"az-AZ\": \"az-Latn-AZ\", \"aze\": \"az\", \"azj\": \"az\", \"bak\": \"ba\", \"bam\": \"bm\", \"baq\": \"eu\", \"bcc\": \"bal\", \"bcl\": \"bik\", \"bel\": \"be\", \"ben\": \"bn\", \"bgm\": \"bcg\", \"bh\": \"bho\", \"bih\": \"bho\", \"bis\": \"bi\", \"bjd\": \"drl\", \"bod\": \"bo\", \"bos\": \"bs\", \"bre\": \"br\", \"bs-BA\": \"bs-Latn-BA\", \"bul\": \"bg\", \"bur\": \"my\", \"bxk\": \"luy\", \"bxr\": \"bua\", \"cat\": \"ca\", \"ccq\": \"rki\", \"cel-gaulish\": \"xtg-x-cel-gaulish\", \"ces\": \"cs\", \"cha\": \"ch\", \"che\": \"ce\", \"chi\": \"zh\", \"chu\": \"cu\", \"chv\": \"cv\", \"cjr\": \"mom\", \"cka\": \"cmr\", \"cld\": \"syr\", \"cmk\": \"xch\", \"cmn\": \"zh\", \"cnr\": \"sr-ME\", \"cor\": \"kw\", \"cos\": \"co\", \"coy\": \"pij\", \"cqu\": \"quh\", \"cre\": \"cr\", \"cwd\": \"cr\", \"cym\": \"cy\", \"cze\": \"cs\", \"dan\": \"da\", \"deu\": \"de\", \"dgo\": \"doi\", \"dhd\": \"mwr\", \"dik\": \"din\", \"diq\": \"zza\", \"dit\": \"dif\", \"div\": \"dv\", \"drh\": \"mn\", \"drw\": \"fa-af\", \"dut\": \"nl\", \"dzo\": \"dz\", \"ekk\": \"et\", \"ell\": \"el\", \"emk\": \"man\", \"eng\": \"en\", \"epo\": \"eo\", \"esk\": \"ik\", \"est\": \"et\", \"eus\": \"eu\", \"ewe\": \"ee\", \"fao\": \"fo\", \"fas\": \"fa\", \"fat\": \"ak\", \"fij\": \"fj\", \"fin\": \"fi\", \"fra\": \"fr\", \"fre\": \"fr\", \"fry\": \"fy\", \"fuc\": \"ff\", \"ful\": \"ff\", \"gav\": \"dev\", \"gaz\": \"om\", \"gbo\": \"grb\", \"geo\": \"ka\", \"ger\": \"de\", \"gfx\": \"vaj\", \"ggn\": \"gvr\", \"gla\": \"gd\", \"gle\": \"ga\", \"glg\": \"gl\", \"glv\": \"gv\", \"gno\": \"gon\", \"gre\": \"el\", \"grn\": \"gn\", \"gti\": \"nyc\", \"gug\": \"gn\", \"guj\": \"gu\", \"guv\": \"duz\", \"gya\": \"gba\", \"ha-Latn-GH\": \"ha-GH\", \"ha-Latn-NE\": \"ha-NE\", \"ha-Latn-NG\": \"ha-NG\", \"hat\": \"ht\", \"hau\": \"ha\", \"hbs\": \"sr-Latn\", \"hdn\": \"hai\", \"hea\": \"hmn\", \"heb\": \"he\", \"her\": \"hz\", \"him\": \"srx\", \"hin\": \"hi\", \"hmo\": \"ho\", \"hrr\": \"jal\", \"hrv\": \"hr\", \"hun\": \"hu\", \"hye\": \"hy\", \"i-ami\": \"ami\", \"i-bnn\": \"bnn\", \"i-hak\": \"hak\", \"i-klingon\": \"tlh\", \"i-lux\": \"lb\", \"i-navajo\": \"nv\", \"i-pwn\": \"pwn\", \"i-tao\": \"tao\", \"i-tay\": \"tay\", \"i-tsu\": \"tsu\", \"i-default\": \"en-x-i-default\", \"i-enochian\": \"und-x-i-enochian\", \"i-mingo\": \"see-x-i-mingo\", \"ibi\": \"opa\", \"ibo\": \"ig\", \"ice\": \"is\", \"ido\": \"io\", \"iii\": \"ii\", \"ike\": \"iu\", \"iku\": \"iu\", \"ile\": \"ie\", \"ilw\": \"gal\", \"in\": \"id\", \"ina\": \"ia\", \"ind\": \"id\", \"ipk\": \"ik\", \"isl\": \"is\", \"ita\": \"it\", \"iw\": \"he\", \"jav\": \"jv\", \"jeg\": \"oyb\", \"ji\": \"yi\", \"jpn\": \"ja\", \"jw\": \"jv\", \"kal\": \"kl\", \"kan\": \"kn\", \"kas\": \"ks\", \"kat\": \"ka\", \"kau\": \"kr\", \"kaz\": \"kk\", \"kgc\": \"tdf\", \"kgh\": \"kml\", \"khk\": \"mn\", \"khm\": \"km\", \"kik\": \"ki\", \"kin\": \"rw\", \"kir\": \"ky\", \"kk-Cyrl-KZ\": \"kk-KZ\", \"kmr\": \"ku\", \"knc\": \"kr\", \"kng\": \"kg\", \"knn\": \"kok\", \"koj\": \"kwv\", \"kom\": \"kv\", \"kon\": \"kg\", \"kor\": \"ko\", \"kpv\": \"kv\", \"krm\": \"bmf\", \"ks-Arab-IN\": \"ks-IN\", \"ktr\": \"dtp\", \"kua\": \"kj\", \"kur\": \"ku\", \"kvs\": \"gdj\", \"kwq\": \"yam\", \"kxe\": \"tvd\", \"ky-Cyrl-KG\": \"ky-KG\", \"kzj\": \"dtp\", \"kzt\": \"dtp\", \"lao\": \"lo\", \"lat\": \"la\", \"lav\": \"lv\", \"lbk\": \"bnc\", \"lii\": \"raq\", \"lim\": \"li\", \"lin\": \"ln\", \"lit\": \"lt\", \"llo\": \"ngt\", \"lmm\": \"rmx\", \"ltz\": \"lb\", \"lub\": \"lu\", \"lug\": \"lg\", \"lvs\": \"lv\", \"mac\": \"mk\", \"mah\": \"mh\", \"mal\": \"ml\", \"mao\": \"mi\", \"mar\": \"mr\", \"may\": \"ms\", \"meg\": \"cir\", \"mhr\": \"chm\", \"mkd\": \"mk\", \"mlg\": \"mg\", \"mlt\": \"mt\", \"mn-Cyrl-MN\": \"mn-MN\", \"mnk\": \"man\", \"mo\": \"ro\", \"mol\": \"ro\", \"mon\": \"mn\", \"mri\": \"mi\", \"ms-Latn-BN\": \"ms-BN\", \"ms-Latn-MY\": \"ms-MY\", \"ms-Latn-SG\": \"ms-SG\", \"msa\": \"ms\", \"mst\": \"mry\", \"mup\": \"raj\", \"mwj\": \"vaj\", \"mya\": \"my\", \"myd\": \"aog\", \"myt\": \"mry\", \"nad\": \"xny\", \"nau\": \"na\", \"nav\": \"nv\", \"nbl\": \"nr\", \"ncp\": \"kdz\", \"nde\": \"nd\", \"ndo\": \"ng\", \"nep\": \"ne\", \"nld\": \"nl\", \"nno\": \"nn\", \"nns\": \"nbr\", \"nnx\": \"ngv\", \"no\": \"nb\", \"no-bok\": \"nb\", \"no-BOKMAL\": \"nb\", \"no-nyn\": \"nn\", \"no-NYNORSK\": \"nn\", \"nob\": \"nb\", \"nor\": \"nb\", \"npi\": \"ne\", \"nts\": \"pij\", \"nya\": \"ny\", \"oci\": \"oc\", \"ojg\": \"oj\", \"oji\": \"oj\", \"ori\": \"or\", \"orm\": \"om\", \"ory\": \"or\", \"oss\": \"os\", \"oun\": \"vaj\", \"pa-IN\": \"pa-Guru-IN\", \"pa-PK\": \"pa-Arab-PK\", \"pan\": \"pa\", \"pbu\": \"ps\", \"pcr\": \"adx\", \"per\": \"fa\", \"pes\": \"fa\", \"pli\": \"pi\", \"plt\": \"mg\", \"pmc\": \"huw\", \"pmu\": \"phr\", \"pnb\": \"lah\", \"pol\": \"pl\", \"por\": \"pt\", \"ppa\": \"bfy\", \"ppr\": \"lcq\", \"prs\": \"fa-AF\", \"pry\": \"prt\", \"pus\": \"ps\", \"puz\": \"pub\", \"que\": \"qu\", \"quz\": \"qu\", \"rmy\": \"rom\", \"roh\": \"rm\", \"ron\": \"ro\", \"rum\": \"ro\", \"run\": \"rn\", \"rus\": \"ru\", \"sag\": \"sg\", \"san\": \"sa\", \"sca\": \"hle\", \"scc\": \"sr\", \"scr\": \"hr\", \"sgn-BE-FR\": \"sfb\", \"sgn-BE-NL\": \"vgt\", \"sgn-CH-DE\": \"sgg\", \"sh\": \"sr-Latn\", \"shi-MA\": \"shi-Tfng-MA\", \"sin\": \"si\", \"skk\": \"oyb\", \"slk\": \"sk\", \"slo\": \"sk\", \"slv\": \"sl\", \"sme\": \"se\", \"smo\": \"sm\", \"sna\": \"sn\", \"snd\": \"sd\", \"som\": \"so\", \"sot\": \"st\", \"spa\": \"es\", \"spy\": \"kln\", \"sqi\": \"sq\", \"sr-BA\": \"sr-Cyrl-BA\", \"sr-ME\": \"sr-Latn-ME\", \"sr-RS\": \"sr-Cyrl-RS\", \"sr-XK\": \"sr-Cyrl-XK\", \"src\": \"sc\", \"srd\": \"sc\", \"srp\": \"sr\", \"ssw\": \"ss\", \"sun\": \"su\", \"swa\": \"sw\", \"swc\": \"sw-CD\", \"swe\": \"sv\", \"swh\": \"sw\", \"tah\": \"ty\", \"tam\": \"ta\", \"tat\": \"tt\", \"tdu\": \"dtp\", \"tel\": \"te\", \"tgk\": \"tg\", \"tgl\": \"fil\", \"tha\": \"th\", \"thc\": \"tpo\", \"thx\": \"oyb\", \"tib\": \"bo\", \"tie\": \"ras\", \"tir\": \"ti\", \"tkk\": \"twm\", \"tl\": \"fil\", \"tlw\": \"weo\", \"tmp\": \"tyj\", \"tne\": \"kak\", \"tnf\": \"fa-af\", \"ton\": \"to\", \"tsf\": \"taj\", \"tsn\": \"tn\", \"tso\": \"ts\", \"ttq\": \"tmh\", \"tuk\": \"tk\", \"tur\": \"tr\", \"tw\": \"ak\", \"twi\": \"ak\", \"tzm-Latn-MA\": \"tzm-MA\", \"ug-Arab-CN\": \"ug-CN\", \"uig\": \"ug\", \"ukr\": \"uk\", \"umu\": \"del\", \"uok\": \"ema\", \"urd\": \"ur\", \"uz-AF\": \"uz-Arab-AF\", \"uz-UZ\": \"uz-Latn-UZ\", \"uzb\": \"uz\", \"uzn\": \"uz\", \"vai-LR\": \"vai-Vaii-LR\", \"ven\": \"ve\", \"vie\": \"vi\", \"vol\": \"vo\", \"wel\": \"cy\", \"wln\": \"wa\", \"wol\": \"wo\", \"xba\": \"cax\", \"xho\": \"xh\", \"xia\": \"acn\", \"xkh\": \"waw\", \"xpe\": \"kpe\", \"xsj\": \"suj\", \"xsl\": \"den\", \"ybd\": \"rki\", \"ydd\": \"yi\", \"yid\": \"yi\", \"yma\": \"lrr\", \"ymt\": \"mtm\", \"yor\": \"yo\", \"yos\": \"zom\", \"yue-CN\": \"yue-Hans-CN\", \"yue-HK\": \"yue-Hant-HK\", \"yuu\": \"yug\", \"zai\": \"zap\", \"zh-CN\": \"zh-Hans-CN\", \"zh-guoyu\": \"zh\", \"zh-hakka\": \"hak\", \"zh-HK\": \"zh-Hant-HK\", \"zh-min-nan\": \"nan\", \"zh-MO\": \"zh-Hant-MO\", \"zh-SG\": \"zh-Hans-SG\", \"zh-TW\": \"zh-Hant-TW\", \"zh-xiang\": \"hsn\", \"zh-min\": \"nan-x-zh-min\", \"zha\": \"za\", \"zho\": \"zh\", \"zsm\": \"ms\", \"zul\": \"zu\", \"zyb\": \"za\" };\nexport var territoryAlias = { \"100\": \"BG\", \"104\": \"MM\", \"108\": \"BI\", \"112\": \"BY\", \"116\": \"KH\", \"120\": \"CM\", \"124\": \"CA\", \"132\": \"CV\", \"136\": \"KY\", \"140\": \"CF\", \"144\": \"LK\", \"148\": \"TD\", \"152\": \"CL\", \"156\": \"CN\", \"158\": \"TW\", \"162\": \"CX\", \"166\": \"CC\", \"170\": \"CO\", \"172\": \"RU AM AZ BY GE KG KZ MD TJ TM UA UZ\", \"174\": \"KM\", \"175\": \"YT\", \"178\": \"CG\", \"180\": \"CD\", \"184\": \"CK\", \"188\": \"CR\", \"191\": \"HR\", \"192\": \"CU\", \"196\": \"CY\", \"200\": \"CZ SK\", \"203\": \"CZ\", \"204\": \"BJ\", \"208\": \"DK\", \"212\": \"DM\", \"214\": \"DO\", \"218\": \"EC\", \"222\": \"SV\", \"226\": \"GQ\", \"230\": \"ET\", \"231\": \"ET\", \"232\": \"ER\", \"233\": \"EE\", \"234\": \"FO\", \"238\": \"FK\", \"239\": \"GS\", \"242\": \"FJ\", \"246\": \"FI\", \"248\": \"AX\", \"249\": \"FR\", \"250\": \"FR\", \"254\": \"GF\", \"258\": \"PF\", \"260\": \"TF\", \"262\": \"DJ\", \"266\": \"GA\", \"268\": \"GE\", \"270\": \"GM\", \"275\": \"PS\", \"276\": \"DE\", \"278\": \"DE\", \"280\": \"DE\", \"288\": \"GH\", \"292\": \"GI\", \"296\": \"KI\", \"300\": \"GR\", \"304\": \"GL\", \"308\": \"GD\", \"312\": \"GP\", \"316\": \"GU\", \"320\": \"GT\", \"324\": \"GN\", \"328\": \"GY\", \"332\": \"HT\", \"334\": \"HM\", \"336\": \"VA\", \"340\": \"HN\", \"344\": \"HK\", \"348\": \"HU\", \"352\": \"IS\", \"356\": \"IN\", \"360\": \"ID\", \"364\": \"IR\", \"368\": \"IQ\", \"372\": \"IE\", \"376\": \"IL\", \"380\": \"IT\", \"384\": \"CI\", \"388\": \"JM\", \"392\": \"JP\", \"398\": \"KZ\", \"400\": \"JO\", \"404\": \"KE\", \"408\": \"KP\", \"410\": \"KR\", \"414\": \"KW\", \"417\": \"KG\", \"418\": \"LA\", \"422\": \"LB\", \"426\": \"LS\", \"428\": \"LV\", \"430\": \"LR\", \"434\": \"LY\", \"438\": \"LI\", \"440\": \"LT\", \"442\": \"LU\", \"446\": \"MO\", \"450\": \"MG\", \"454\": \"MW\", \"458\": \"MY\", \"462\": \"MV\", \"466\": \"ML\", \"470\": \"MT\", \"474\": \"MQ\", \"478\": \"MR\", \"480\": \"MU\", \"484\": \"MX\", \"492\": \"MC\", \"496\": \"MN\", \"498\": \"MD\", \"499\": \"ME\", \"500\": \"MS\", \"504\": \"MA\", \"508\": \"MZ\", \"512\": \"OM\", \"516\": \"NA\", \"520\": \"NR\", \"524\": \"NP\", \"528\": \"NL\", \"530\": \"CW SX BQ\", \"531\": \"CW\", \"532\": \"CW SX BQ\", \"533\": \"AW\", \"534\": \"SX\", \"535\": \"BQ\", \"536\": \"SA IQ\", \"540\": \"NC\", \"548\": \"VU\", \"554\": \"NZ\", \"558\": \"NI\", \"562\": \"NE\", \"566\": \"NG\", \"570\": \"NU\", \"574\": \"NF\", \"578\": \"NO\", \"580\": \"MP\", \"581\": \"UM\", \"582\": \"FM MH MP PW\", \"583\": \"FM\", \"584\": \"MH\", \"585\": \"PW\", \"586\": \"PK\", \"591\": \"PA\", \"598\": \"PG\", \"600\": \"PY\", \"604\": \"PE\", \"608\": \"PH\", \"612\": \"PN\", \"616\": \"PL\", \"620\": \"PT\", \"624\": \"GW\", \"626\": \"TL\", \"630\": \"PR\", \"634\": \"QA\", \"638\": \"RE\", \"642\": \"RO\", \"643\": \"RU\", \"646\": \"RW\", \"652\": \"BL\", \"654\": \"SH\", \"659\": \"KN\", \"660\": \"AI\", \"662\": \"LC\", \"663\": \"MF\", \"666\": \"PM\", \"670\": \"VC\", \"674\": \"SM\", \"678\": \"ST\", \"682\": \"SA\", \"686\": \"SN\", \"688\": \"RS\", \"690\": \"SC\", \"694\": \"SL\", \"702\": \"SG\", \"703\": \"SK\", \"704\": \"VN\", \"705\": \"SI\", \"706\": \"SO\", \"710\": \"ZA\", \"716\": \"ZW\", \"720\": \"YE\", \"724\": \"ES\", \"728\": \"SS\", \"729\": \"SD\", \"732\": \"EH\", \"736\": \"SD\", \"740\": \"SR\", \"744\": \"SJ\", \"748\": \"SZ\", \"752\": \"SE\", \"756\": \"CH\", \"760\": \"SY\", \"762\": \"TJ\", \"764\": \"TH\", \"768\": \"TG\", \"772\": \"TK\", \"776\": \"TO\", \"780\": \"TT\", \"784\": \"AE\", \"788\": \"TN\", \"792\": \"TR\", \"795\": \"TM\", \"796\": \"TC\", \"798\": \"TV\", \"800\": \"UG\", \"804\": \"UA\", \"807\": \"MK\", \"810\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\", \"818\": \"EG\", \"826\": \"GB\", \"830\": \"JE GG\", \"831\": \"GG\", \"832\": \"JE\", \"833\": \"IM\", \"834\": \"TZ\", \"840\": \"US\", \"850\": \"VI\", \"854\": \"BF\", \"858\": \"UY\", \"860\": \"UZ\", \"862\": \"VE\", \"876\": \"WF\", \"882\": \"WS\", \"886\": \"YE\", \"887\": \"YE\", \"890\": \"RS ME SI HR MK BA\", \"891\": \"RS ME\", \"894\": \"ZM\", \"958\": \"AA\", \"959\": \"QM\", \"960\": \"QN\", \"962\": \"QP\", \"963\": \"QQ\", \"964\": \"QR\", \"965\": \"QS\", \"966\": \"QT\", \"967\": \"EU\", \"968\": \"QV\", \"969\": \"QW\", \"970\": \"QX\", \"971\": \"QY\", \"972\": \"QZ\", \"973\": \"XA\", \"974\": \"XB\", \"975\": \"XC\", \"976\": \"XD\", \"977\": \"XE\", \"978\": \"XF\", \"979\": \"XG\", \"980\": \"XH\", \"981\": \"XI\", \"982\": \"XJ\", \"983\": \"XK\", \"984\": \"XL\", \"985\": \"XM\", \"986\": \"XN\", \"987\": \"XO\", \"988\": \"XP\", \"989\": \"XQ\", \"990\": \"XR\", \"991\": \"XS\", \"992\": \"XT\", \"993\": \"XU\", \"994\": \"XV\", \"995\": \"XW\", \"996\": \"XX\", \"997\": \"XY\", \"998\": \"XZ\", \"999\": \"ZZ\", \"004\": \"AF\", \"008\": \"AL\", \"010\": \"AQ\", \"012\": \"DZ\", \"016\": \"AS\", \"020\": \"AD\", \"024\": \"AO\", \"028\": \"AG\", \"031\": \"AZ\", \"032\": \"AR\", \"036\": \"AU\", \"040\": \"AT\", \"044\": \"BS\", \"048\": \"BH\", \"050\": \"BD\", \"051\": \"AM\", \"052\": \"BB\", \"056\": \"BE\", \"060\": \"BM\", \"062\": \"034 143\", \"064\": \"BT\", \"068\": \"BO\", \"070\": \"BA\", \"072\": \"BW\", \"074\": \"BV\", \"076\": \"BR\", \"084\": \"BZ\", \"086\": \"IO\", \"090\": \"SB\", \"092\": \"VG\", \"096\": \"BN\", \"AAA\": \"AA\", \"ABW\": \"AW\", \"AFG\": \"AF\", \"AGO\": \"AO\", \"AIA\": \"AI\", \"ALA\": \"AX\", \"ALB\": \"AL\", \"AN\": \"CW SX BQ\", \"AND\": \"AD\", \"ANT\": \"CW SX BQ\", \"ARE\": \"AE\", \"ARG\": \"AR\", \"ARM\": \"AM\", \"ASC\": \"AC\", \"ASM\": \"AS\", \"ATA\": \"AQ\", \"ATF\": \"TF\", \"ATG\": \"AG\", \"AUS\": \"AU\", \"AUT\": \"AT\", \"AZE\": \"AZ\", \"BDI\": \"BI\", \"BEL\": \"BE\", \"BEN\": \"BJ\", \"BES\": \"BQ\", \"BFA\": \"BF\", \"BGD\": \"BD\", \"BGR\": \"BG\", \"BHR\": \"BH\", \"BHS\": \"BS\", \"BIH\": \"BA\", \"BLM\": \"BL\", \"BLR\": \"BY\", \"BLZ\": \"BZ\", \"BMU\": \"BM\", \"BOL\": \"BO\", \"BRA\": \"BR\", \"BRB\": \"BB\", \"BRN\": \"BN\", \"BTN\": \"BT\", \"BU\": \"MM\", \"BUR\": \"MM\", \"BVT\": \"BV\", \"BWA\": \"BW\", \"CAF\": \"CF\", \"CAN\": \"CA\", \"CCK\": \"CC\", \"CHE\": \"CH\", \"CHL\": \"CL\", \"CHN\": \"CN\", \"CIV\": \"CI\", \"CMR\": \"CM\", \"COD\": \"CD\", \"COG\": \"CG\", \"COK\": \"CK\", \"COL\": \"CO\", \"COM\": \"KM\", \"CPT\": \"CP\", \"CPV\": \"CV\", \"CRI\": \"CR\", \"CS\": \"RS ME\", \"CT\": \"KI\", \"CUB\": \"CU\", \"CUW\": \"CW\", \"CXR\": \"CX\", \"CYM\": \"KY\", \"CYP\": \"CY\", \"CZE\": \"CZ\", \"DD\": \"DE\", \"DDR\": \"DE\", \"DEU\": \"DE\", \"DGA\": \"DG\", \"DJI\": \"DJ\", \"DMA\": \"DM\", \"DNK\": \"DK\", \"DOM\": \"DO\", \"DY\": \"BJ\", \"DZA\": \"DZ\", \"ECU\": \"EC\", \"EGY\": \"EG\", \"ERI\": \"ER\", \"ESH\": \"EH\", \"ESP\": \"ES\", \"EST\": \"EE\", \"ETH\": \"ET\", \"FIN\": \"FI\", \"FJI\": \"FJ\", \"FLK\": \"FK\", \"FQ\": \"AQ TF\", \"FRA\": \"FR\", \"FRO\": \"FO\", \"FSM\": \"FM\", \"FX\": \"FR\", \"FXX\": \"FR\", \"GAB\": \"GA\", \"GBR\": \"GB\", \"GEO\": \"GE\", \"GGY\": \"GG\", \"GHA\": \"GH\", \"GIB\": \"GI\", \"GIN\": \"GN\", \"GLP\": \"GP\", \"GMB\": \"GM\", \"GNB\": \"GW\", \"GNQ\": \"GQ\", \"GRC\": \"GR\", \"GRD\": \"GD\", \"GRL\": \"GL\", \"GTM\": \"GT\", \"GUF\": \"GF\", \"GUM\": \"GU\", \"GUY\": \"GY\", \"HKG\": \"HK\", \"HMD\": \"HM\", \"HND\": \"HN\", \"HRV\": \"HR\", \"HTI\": \"HT\", \"HUN\": \"HU\", \"HV\": \"BF\", \"IDN\": \"ID\", \"IMN\": \"IM\", \"IND\": \"IN\", \"IOT\": \"IO\", \"IRL\": \"IE\", \"IRN\": \"IR\", \"IRQ\": \"IQ\", \"ISL\": \"IS\", \"ISR\": \"IL\", \"ITA\": \"IT\", \"JAM\": \"JM\", \"JEY\": \"JE\", \"JOR\": \"JO\", \"JPN\": \"JP\", \"JT\": \"UM\", \"KAZ\": \"KZ\", \"KEN\": \"KE\", \"KGZ\": \"KG\", \"KHM\": \"KH\", \"KIR\": \"KI\", \"KNA\": \"KN\", \"KOR\": \"KR\", \"KWT\": \"KW\", \"LAO\": \"LA\", \"LBN\": \"LB\", \"LBR\": \"LR\", \"LBY\": \"LY\", \"LCA\": \"LC\", \"LIE\": \"LI\", \"LKA\": \"LK\", \"LSO\": \"LS\", \"LTU\": \"LT\", \"LUX\": \"LU\", \"LVA\": \"LV\", \"MAC\": \"MO\", \"MAF\": \"MF\", \"MAR\": \"MA\", \"MCO\": \"MC\", \"MDA\": \"MD\", \"MDG\": \"MG\", \"MDV\": \"MV\", \"MEX\": \"MX\", \"MHL\": \"MH\", \"MI\": \"UM\", \"MKD\": \"MK\", \"MLI\": \"ML\", \"MLT\": \"MT\", \"MMR\": \"MM\", \"MNE\": \"ME\", \"MNG\": \"MN\", \"MNP\": \"MP\", \"MOZ\": \"MZ\", \"MRT\": \"MR\", \"MSR\": \"MS\", \"MTQ\": \"MQ\", \"MUS\": \"MU\", \"MWI\": \"MW\", \"MYS\": \"MY\", \"MYT\": \"YT\", \"NAM\": \"NA\", \"NCL\": \"NC\", \"NER\": \"NE\", \"NFK\": \"NF\", \"NGA\": \"NG\", \"NH\": \"VU\", \"NIC\": \"NI\", \"NIU\": \"NU\", \"NLD\": \"NL\", \"NOR\": \"NO\", \"NPL\": \"NP\", \"NQ\": \"AQ\", \"NRU\": \"NR\", \"NT\": \"SA IQ\", \"NTZ\": \"SA IQ\", \"NZL\": \"NZ\", \"OMN\": \"OM\", \"PAK\": \"PK\", \"PAN\": \"PA\", \"PC\": \"FM MH MP PW\", \"PCN\": \"PN\", \"PER\": \"PE\", \"PHL\": \"PH\", \"PLW\": \"PW\", \"PNG\": \"PG\", \"POL\": \"PL\", \"PRI\": \"PR\", \"PRK\": \"KP\", \"PRT\": \"PT\", \"PRY\": \"PY\", \"PSE\": \"PS\", \"PU\": \"UM\", \"PYF\": \"PF\", \"PZ\": \"PA\", \"QAT\": \"QA\", \"QMM\": \"QM\", \"QNN\": \"QN\", \"QPP\": \"QP\", \"QQQ\": \"QQ\", \"QRR\": \"QR\", \"QSS\": \"QS\", \"QTT\": \"QT\", \"QU\": \"EU\", \"QUU\": \"EU\", \"QVV\": \"QV\", \"QWW\": \"QW\", \"QXX\": \"QX\", \"QYY\": \"QY\", \"QZZ\": \"QZ\", \"REU\": \"RE\", \"RH\": \"ZW\", \"ROU\": \"RO\", \"RUS\": \"RU\", \"RWA\": \"RW\", \"SAU\": \"SA\", \"SCG\": \"RS ME\", \"SDN\": \"SD\", \"SEN\": \"SN\", \"SGP\": \"SG\", \"SGS\": \"GS\", \"SHN\": \"SH\", \"SJM\": \"SJ\", \"SLB\": \"SB\", \"SLE\": \"SL\", \"SLV\": \"SV\", \"SMR\": \"SM\", \"SOM\": \"SO\", \"SPM\": \"PM\", \"SRB\": \"RS\", \"SSD\": \"SS\", \"STP\": \"ST\", \"SU\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\", \"SUN\": \"RU AM AZ BY EE GE KZ KG LV LT MD TJ TM UA UZ\", \"SUR\": \"SR\", \"SVK\": \"SK\", \"SVN\": \"SI\", \"SWE\": \"SE\", \"SWZ\": \"SZ\", \"SXM\": \"SX\", \"SYC\": \"SC\", \"SYR\": \"SY\", \"TAA\": \"TA\", \"TCA\": \"TC\", \"TCD\": \"TD\", \"TGO\": \"TG\", \"THA\": \"TH\", \"TJK\": \"TJ\", \"TKL\": \"TK\", \"TKM\": \"TM\", \"TLS\": \"TL\", \"TMP\": \"TL\", \"TON\": \"TO\", \"TP\": \"TL\", \"TTO\": \"TT\", \"TUN\": \"TN\", \"TUR\": \"TR\", \"TUV\": \"TV\", \"TWN\": \"TW\", \"TZA\": \"TZ\", \"UGA\": \"UG\", \"UK\": \"GB\", \"UKR\": \"UA\", \"UMI\": \"UM\", \"URY\": \"UY\", \"USA\": \"US\", \"UZB\": \"UZ\", \"VAT\": \"VA\", \"VCT\": \"VC\", \"VD\": \"VN\", \"VEN\": \"VE\", \"VGB\": \"VG\", \"VIR\": \"VI\", \"VNM\": \"VN\", \"VUT\": \"VU\", \"WK\": \"UM\", \"WLF\": \"WF\", \"WSM\": \"WS\", \"XAA\": \"XA\", \"XBB\": \"XB\", \"XCC\": \"XC\", \"XDD\": \"XD\", \"XEE\": \"XE\", \"XFF\": \"XF\", \"XGG\": \"XG\", \"XHH\": \"XH\", \"XII\": \"XI\", \"XJJ\": \"XJ\", \"XKK\": \"XK\", \"XLL\": \"XL\", \"XMM\": \"XM\", \"XNN\": \"XN\", \"XOO\": \"XO\", \"XPP\": \"XP\", \"XQQ\": \"XQ\", \"XRR\": \"XR\", \"XSS\": \"XS\", \"XTT\": \"XT\", \"XUU\": \"XU\", \"XVV\": \"XV\", \"XWW\": \"XW\", \"XXX\": \"XX\", \"XYY\": \"XY\", \"XZZ\": \"XZ\", \"YD\": \"YE\", \"YEM\": \"YE\", \"YMD\": \"YE\", \"YU\": \"RS ME\", \"YUG\": \"RS ME\", \"ZAF\": \"ZA\", \"ZAR\": \"CD\", \"ZMB\": \"ZM\", \"ZR\": \"CD\", \"ZWE\": \"ZW\", \"ZZZ\": \"ZZ\" };\nexport var scriptAlias = { \"Qaai\": \"Zinh\" };\nexport var variantAlias = { \"AALAND\": \"AX\", \"arevela\": \"hy\", \"arevmda\": \"hyw\", \"heploc\": \"alalc97\", \"HEPLOC\": \"ALALC97\", \"POLYTONI\": \"POLYTON\" };\n//# sourceMappingURL=aliases.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { languageAlias, variantAlias, scriptAlias, territoryAlias, } from './aliases';\nimport { parseUnicodeLanguageId, isUnicodeVariantSubtag, isUnicodeLanguageSubtag, SEPARATOR, } from './parser';\nimport * as likelySubtags from 'cldr-core/supplemental/likelySubtags.json';\nimport { emitUnicodeLanguageId } from './emitter';\nfunction canonicalizeAttrs(strs) {\n    return Object.keys(strs.reduce(function (all, str) {\n        all[str.toLowerCase()] = 1;\n        return all;\n    }, {})).sort();\n}\nfunction canonicalizeKVs(arr) {\n    var all = {};\n    var result = [];\n    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n        var kv = arr_1[_i];\n        if (kv[0] in all) {\n            continue;\n        }\n        all[kv[0]] = 1;\n        if (!kv[1] || kv[1] === 'true') {\n            result.push([kv[0].toLowerCase()]);\n        }\n        else {\n            result.push([kv[0].toLowerCase(), kv[1].toLowerCase()]);\n        }\n    }\n    return result.sort(compareKV);\n}\nfunction compareKV(t1, t2) {\n    return t1[0] < t2[0] ? -1 : t1[0] > t2[0] ? 1 : 0;\n}\nfunction compareExtension(e1, e2) {\n    return e1.type < e2.type ? -1 : e1.type > e2.type ? 1 : 0;\n}\nfunction mergeVariants(v1, v2) {\n    var result = __spreadArrays(v1);\n    for (var _i = 0, v2_1 = v2; _i < v2_1.length; _i++) {\n        var v = v2_1[_i];\n        if (v1.indexOf(v) < 0) {\n            result.push(v);\n        }\n    }\n    return result;\n}\n/**\n * CAVEAT: We don't do this section in the spec bc they have no JSON data\n * Use the bcp47 data to replace keys, types, tfields, and tvalues by their canonical forms. See Section 3.6.4 U Extension Data Files) and Section 3.7.1 T Extension Data Files. The aliases are in the alias attribute value, while the canonical is in the name attribute value. For example,\nBecause of the following bcp47 data:\n<key name=\"ms\"…>…<type name=\"uksystem\" … alias=\"imperial\" … />…</key>\nWe get the following transformation:\nen-u-ms-imperial ⇒ en-u-ms-uksystem\n * @param lang\n */\nexport function canonicalizeUnicodeLanguageId(unicodeLanguageId) {\n    /**\n     * If the language subtag matches the type attribute of a languageAlias element in Supplemental Data, replace the language subtag with the replacement value.\n     *  1. If there are additional subtags in the replacement value, add them to the result, but only if there is no corresponding subtag already in the tag.\n     *  2. Five special deprecated grandfathered codes (such as i-default) are in type attributes, and are also replaced.\n     */\n    // From https://github.com/unicode-org/icu/blob/master/icu4j/main/classes/core/src/com/ibm/icu/util/ULocale.java#L1246\n    // Try language _ variant\n    var finalLangAst = unicodeLanguageId;\n    if (unicodeLanguageId.variants.length) {\n        var replacedLang_1 = '';\n        for (var _i = 0, _a = unicodeLanguageId.variants; _i < _a.length; _i++) {\n            var variant = _a[_i];\n            if ((replacedLang_1 =\n                languageAlias[emitUnicodeLanguageId({\n                    lang: unicodeLanguageId.lang,\n                    variants: [variant],\n                })])) {\n                var replacedLangAst = parseUnicodeLanguageId(replacedLang_1.split(SEPARATOR));\n                finalLangAst = {\n                    lang: replacedLangAst.lang,\n                    script: finalLangAst.script || replacedLangAst.script,\n                    region: finalLangAst.region || replacedLangAst.region,\n                    variants: mergeVariants(finalLangAst.variants, replacedLangAst.variants),\n                };\n                break;\n            }\n        }\n    }\n    // language _ script _ country\n    // ug-Arab-CN -> ug-CN\n    if (finalLangAst.script && finalLangAst.region) {\n        var replacedLang_2 = languageAlias[emitUnicodeLanguageId({\n            lang: finalLangAst.lang,\n            script: finalLangAst.script,\n            region: finalLangAst.region,\n            variants: [],\n        })];\n        if (replacedLang_2) {\n            var replacedLangAst = parseUnicodeLanguageId(replacedLang_2.split(SEPARATOR));\n            finalLangAst = {\n                lang: replacedLangAst.lang,\n                script: replacedLangAst.script,\n                region: replacedLangAst.region,\n                variants: finalLangAst.variants,\n            };\n        }\n    }\n    // language _ country\n    // eg. az_AZ -> az_Latn_A\n    if (finalLangAst.region) {\n        var replacedLang_3 = languageAlias[emitUnicodeLanguageId({\n            lang: finalLangAst.lang,\n            region: finalLangAst.region,\n            variants: [],\n        })];\n        if (replacedLang_3) {\n            var replacedLangAst = parseUnicodeLanguageId(replacedLang_3.split(SEPARATOR));\n            finalLangAst = {\n                lang: replacedLangAst.lang,\n                script: finalLangAst.script || replacedLangAst.script,\n                region: replacedLangAst.region,\n                variants: finalLangAst.variants,\n            };\n        }\n    }\n    // only language\n    // e.g. twi -> ak\n    var replacedLang = languageAlias[emitUnicodeLanguageId({\n        lang: finalLangAst.lang,\n        variants: [],\n    })];\n    if (replacedLang) {\n        var replacedLangAst = parseUnicodeLanguageId(replacedLang.split(SEPARATOR));\n        finalLangAst = {\n            lang: replacedLangAst.lang,\n            script: finalLangAst.script || replacedLangAst.script,\n            region: finalLangAst.region || replacedLangAst.region,\n            variants: finalLangAst.variants,\n        };\n    }\n    if (finalLangAst.region) {\n        var region = finalLangAst.region.toUpperCase();\n        var regionAlias = territoryAlias[region];\n        var replacedRegion = void 0;\n        if (regionAlias) {\n            var regions = regionAlias.split(' ');\n            replacedRegion = regions[0];\n            var likelySubtag = likelySubtags.supplemental.likelySubtags[emitUnicodeLanguageId({\n                lang: finalLangAst.lang,\n                script: finalLangAst.script,\n                variants: [],\n            })];\n            if (likelySubtag) {\n                var likelyRegion = parseUnicodeLanguageId(likelySubtag.split(SEPARATOR)).region;\n                if (likelyRegion && regions.indexOf(likelyRegion) > -1) {\n                    replacedRegion = likelyRegion;\n                }\n            }\n        }\n        if (replacedRegion) {\n            finalLangAst.region = replacedRegion;\n        }\n        finalLangAst.region = finalLangAst.region.toUpperCase();\n    }\n    if (finalLangAst.script) {\n        finalLangAst.script =\n            finalLangAst.script[0].toUpperCase() +\n                finalLangAst.script.slice(1).toLowerCase();\n        if (scriptAlias[finalLangAst.script]) {\n            finalLangAst.script = scriptAlias[finalLangAst.script];\n        }\n    }\n    if (finalLangAst.variants.length) {\n        for (var i = 0; i < finalLangAst.variants.length; i++) {\n            var variant = finalLangAst.variants[i].toLowerCase();\n            if (variantAlias[variant]) {\n                var alias = variantAlias[variant];\n                if (isUnicodeVariantSubtag(alias)) {\n                    finalLangAst.variants[i] = alias;\n                }\n                else if (isUnicodeLanguageSubtag(alias)) {\n                    // Yes this can happen per the spec\n                    finalLangAst.lang = alias;\n                }\n            }\n        }\n        finalLangAst.variants.sort();\n    }\n    return finalLangAst;\n}\n/**\n * Canonicalize based on\n * https://www.unicode.org/reports/tr35/tr35.html#Canonical_Unicode_Locale_Identifiers\n * https://tc39.es/ecma402/#sec-canonicalizeunicodelocaleid\n * IMPORTANT: This modifies the object inline\n * @param locale\n */\nexport function canonicalizeUnicodeLocaleId(locale) {\n    locale.lang = canonicalizeUnicodeLanguageId(locale.lang);\n    if (locale.extensions) {\n        for (var _i = 0, _a = locale.extensions; _i < _a.length; _i++) {\n            var extension = _a[_i];\n            switch (extension.type) {\n                case 'u':\n                    extension.keywords = canonicalizeKVs(extension.keywords);\n                    if (extension.attributes) {\n                        extension.attributes = canonicalizeAttrs(extension.attributes);\n                    }\n                    break;\n                case 't':\n                    if (extension.lang) {\n                        extension.lang = canonicalizeUnicodeLanguageId(extension.lang);\n                    }\n                    extension.fields = canonicalizeKVs(extension.fields);\n                    break;\n                default:\n                    extension.value = extension.value.toLowerCase();\n                    break;\n            }\n        }\n        locale.extensions.sort(compareExtension);\n    }\n    return locale;\n}\n//# sourceMappingURL=canonicalizer.js.map","import { parseUnicodeLocaleId } from './parser';\nimport { emitUnicodeLocaleId } from './emitter';\nimport { canonicalizeUnicodeLocaleId } from './canonicalizer';\nfunction canonicalizeLocaleList(locales) {\n    if (locales === undefined) {\n        return [];\n    }\n    var seen = [];\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    for (var _i = 0, locales_1 = locales; _i < locales_1.length; _i++) {\n        var locale = locales_1[_i];\n        var canonicalizedTag = emitUnicodeLocaleId(canonicalizeUnicodeLocaleId(parseUnicodeLocaleId(locale)));\n        if (seen.indexOf(canonicalizedTag) < 0) {\n            seen.push(canonicalizedTag);\n        }\n    }\n    return seen;\n}\nexport function getCanonicalLocales(locales) {\n    return canonicalizeLocaleList(locales);\n}\nexport { parseUnicodeLocaleId, parseUnicodeLanguageId, isStructurallyValidLanguageTag, isUnicodeRegionSubtag, isUnicodeScriptSubtag, isUnicodeLanguageSubtag, } from './parser';\nexport * from './emitter';\n//# sourceMappingURL=index.js.map"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ALPHANUM_1_8","ALPHANUM_2_8","ALPHANUM_3_8","KEY_REGEX","TYPE_REGEX","ALPHA_4","OTHER_EXTENSION_TYPE","UNICODE_REGION_SUBTAG_REGEX","UNICODE_VARIANT_SUBTAG_REGEX","UNICODE_LANGUAGE_SUBTAG_REGEX","TKEY_REGEX","SEPARATOR","isUnicodeLanguageSubtag","lang","test","isUnicodeRegionSubtag","region","isUnicodeScriptSubtag","script","isUnicodeVariantSubtag","variant","parseUnicodeLanguageId","chunks","split","shift","RangeError","variants","keys","parseUnicodeExtension","keyword","keywords","parseKeyword","push","type","attributes","key","value","join","parseTransformedExtension","e","fields","parsePuExtension","exts","parseOtherExtensionValue","parseUnicodeLocaleId","locale","extensions","unicodeExtension","transformedExtension","puExtension","otherExtensionMap","extension","parseExtensions","__spreadArrays","il","r","Array","k","a","j","jl","emitUnicodeLanguageId","filter","Boolean","emitUnicodeLocaleId","_a","_i","extensions_1","ext","reduce","all","kv","concat","languageAlias","aa-SAAHO","aam","aar","abk","adp","afr","aju","aka","alb","als","amh","ara","arb","arg","arm","art-lojban","asd","asm","aue","ava","ave","aym","ayr","ayx","az-AZ","aze","azj","bak","bam","baq","bcc","bcl","bel","ben","bgm","bh","bih","bis","bjd","bod","bos","bre","bs-BA","bul","bur","bxk","bxr","cat","ccq","cel-gaulish","ces","cha","che","chi","chu","chv","cjr","cka","cld","cmk","cmn","cnr","cor","cos","coy","cqu","cre","cwd","cym","cze","dan","deu","dgo","dhd","dik","diq","dit","div","drh","drw","dut","dzo","ekk","ell","emk","eng","epo","esk","est","eus","ewe","fao","fas","fat","fij","fin","fra","fre","fry","fuc","ful","gav","gaz","gbo","geo","ger","gfx","ggn","gla","gle","glg","glv","gno","gre","grn","gti","gug","guj","guv","gya","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","hat","hau","hbs","hdn","hea","heb","her","him","hin","hmo","hrr","hrv","hun","hye","i-ami","i-bnn","i-hak","i-klingon","i-lux","i-navajo","i-pwn","i-tao","i-tay","i-tsu","i-default","i-enochian","i-mingo","ibi","ibo","ice","ido","iii","ike","iku","ile","ilw","in","ina","ind","ipk","isl","ita","iw","jav","jeg","ji","jpn","jw","kal","kan","kas","kat","kau","kaz","kgc","kgh","khk","khm","kik","kin","kir","kk-Cyrl-KZ","kmr","knc","kng","knn","koj","kom","kon","kor","kpv","krm","ks-Arab-IN","ktr","kua","kur","kvs","kwq","kxe","ky-Cyrl-KG","kzj","kzt","lao","lat","lav","lbk","lii","lim","lin","lit","llo","lmm","ltz","lub","lug","lvs","mac","mah","mal","mao","mar","may","meg","mhr","mkd","mlg","mlt","mn-Cyrl-MN","mnk","mo","mol","mon","mri","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","msa","mst","mup","mwj","mya","myd","myt","nad","nau","nav","nbl","ncp","nde","ndo","nep","nld","nno","nns","nnx","no","no-bok","no-BOKMAL","no-nyn","no-NYNORSK","nob","nor","npi","nts","nya","oci","ojg","oji","ori","orm","ory","oss","oun","pa-IN","pa-PK","pan","pbu","pcr","per","pes","pli","plt","pmc","pmu","pnb","pol","por","ppa","ppr","prs","pry","pus","puz","que","quz","rmy","roh","ron","rum","run","rus","sag","san","sca","scc","scr","sgn-BE-FR","sgn-BE-NL","sgn-CH-DE","sh","shi-MA","sin","skk","slk","slo","slv","sme","smo","sna","snd","som","sot","spa","spy","sqi","sr-BA","sr-ME","sr-RS","sr-XK","src","srd","srp","ssw","sun","swa","swc","swe","swh","tah","tam","tat","tdu","tel","tgk","tgl","tha","thc","thx","tib","tie","tir","tkk","tl","tlw","tmp","tne","tnf","ton","tsf","tsn","tso","ttq","tuk","tur","tw","twi","tzm-Latn-MA","ug-Arab-CN","uig","ukr","umu","uok","urd","uz-AF","uz-UZ","uzb","uzn","vai-LR","ven","vie","vol","wel","wln","wol","xba","xho","xia","xkh","xpe","xsj","xsl","ybd","ydd","yid","yma","ymt","yor","yos","yue-CN","yue-HK","yuu","zai","zh-CN","zh-guoyu","zh-hakka","zh-HK","zh-min-nan","zh-MO","zh-SG","zh-TW","zh-xiang","zh-min","zha","zho","zsm","zul","zyb","territoryAlias","100","104","108","112","116","120","124","132","136","140","144","148","152","156","158","162","166","170","172","174","175","178","180","184","188","191","192","196","200","203","204","208","212","214","218","222","226","230","231","232","233","234","238","239","242","246","248","249","250","254","258","260","262","266","268","270","275","276","278","280","288","292","296","300","304","308","312","316","320","324","328","332","334","336","340","344","348","352","356","360","364","368","372","376","380","384","388","392","398","400","404","408","410","414","417","418","422","426","428","430","434","438","440","442","446","450","454","458","462","466","470","474","478","480","484","492","496","498","499","500","504","508","512","516","520","524","528","530","531","532","533","534","535","536","540","548","554","558","562","566","570","574","578","580","581","582","583","584","585","586","591","598","600","604","608","612","616","620","624","626","630","634","638","642","643","646","652","654","659","660","662","663","666","670","674","678","682","686","688","690","694","702","703","704","705","706","710","716","720","724","728","729","732","736","740","744","748","752","756","760","762","764","768","772","776","780","784","788","792","795","796","798","800","804","807","810","818","826","830","831","832","833","834","840","850","854","858","860","862","876","882","886","887","890","891","894","958","959","960","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","004","008","010","012","016","020","024","028","031","032","036","040","044","048","050","051","052","056","060","062","064","068","070","072","074","076","084","086","090","092","096","AAA","ABW","AFG","AGO","AIA","ALA","ALB","AN","AND","ANT","ARE","ARG","ARM","ASC","ASM","ATA","ATF","ATG","AUS","AUT","AZE","BDI","BEL","BEN","BES","BFA","BGD","BGR","BHR","BHS","BIH","BLM","BLR","BLZ","BMU","BOL","BRA","BRB","BRN","BTN","BU","BUR","BVT","BWA","CAF","CAN","CCK","CHE","CHL","CHN","CIV","CMR","COD","COG","COK","COL","COM","CPT","CPV","CRI","CS","CT","CUB","CUW","CXR","CYM","CYP","CZE","DD","DDR","DEU","DGA","DJI","DMA","DNK","DOM","DY","DZA","ECU","EGY","ERI","ESH","ESP","EST","ETH","FIN","FJI","FLK","FQ","FRA","FRO","FSM","FX","FXX","GAB","GBR","GEO","GGY","GHA","GIB","GIN","GLP","GMB","GNB","GNQ","GRC","GRD","GRL","GTM","GUF","GUM","GUY","HKG","HMD","HND","HRV","HTI","HUN","HV","IDN","IMN","IND","IOT","IRL","IRN","IRQ","ISL","ISR","ITA","JAM","JEY","JOR","JPN","JT","KAZ","KEN","KGZ","KHM","KIR","KNA","KOR","KWT","LAO","LBN","LBR","LBY","LCA","LIE","LKA","LSO","LTU","LUX","LVA","MAC","MAF","MAR","MCO","MDA","MDG","MDV","MEX","MHL","MI","MKD","MLI","MLT","MMR","MNE","MNG","MNP","MOZ","MRT","MSR","MTQ","MUS","MWI","MYS","MYT","NAM","NCL","NER","NFK","NGA","NH","NIC","NIU","NLD","NOR","NPL","NQ","NRU","NT","NTZ","NZL","OMN","PAK","PAN","PC","PCN","PER","PHL","PLW","PNG","POL","PRI","PRK","PRT","PRY","PSE","PU","PYF","PZ","QAT","QMM","QNN","QPP","QQQ","QRR","QSS","QTT","QU","QUU","QVV","QWW","QXX","QYY","QZZ","REU","RH","ROU","RUS","RWA","SAU","SCG","SDN","SEN","SGP","SGS","SHN","SJM","SLB","SLE","SLV","SMR","SOM","SPM","SRB","SSD","STP","SU","SUN","SUR","SVK","SVN","SWE","SWZ","SXM","SYC","SYR","TAA","TCA","TCD","TGO","THA","TJK","TKL","TKM","TLS","TMP","TON","TP","TTO","TUN","TUR","TUV","TWN","TZA","UGA","UK","UKR","UMI","URY","USA","UZB","VAT","VCT","VD","VEN","VGB","VIR","VNM","VUT","WK","WLF","WSM","XAA","XBB","XCC","XDD","XEE","XFF","XGG","XHH","XII","XJJ","XKK","XLL","XMM","XNN","XOO","XPP","XQQ","XRR","XSS","XTT","XUU","XVV","XWW","XXX","XYY","XZZ","YD","YEM","YMD","YU","YUG","ZAF","ZAR","ZMB","ZR","ZWE","ZZZ","scriptAlias","Qaai","variantAlias","AALAND","arevela","arevmda","heploc","HEPLOC","POLYTONI","canonicalizeKVs","arr","result","arr_1","toLowerCase","sort","compareKV","t1","t2","compareExtension","e1","e2","mergeVariants","v1","v2","v2_1","v","indexOf","canonicalizeUnicodeLanguageId","unicodeLanguageId","replacedLang_2","replacedLang_3","finalLangAst","replacedLang_1","replacedLangAst","regionAlias","regions","replacedRegion","likelySubtag","likelyRegion","replacedLang","toUpperCase","likelySubtags.supplemental","likelySubtags","slice","alias","canonicalizeUnicodeLocaleId","strs","str","locales","undefined","seen","locales_1","canonicalizedTag","canonicalizeLocaleList","tag"],"mappings":"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aAAc,mBAAoBC,UAAW,gBAAiBC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,GAAM,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,GAAM,KAAMC,IAAO,KAAMC,IAAO,MAAOC,GAAM,KAAMC,IAAO,KAAMC,GAAM,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,aAAc,QAASC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,aAAc,QAASC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,MAAOC,aAAc,QAASC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,aAAc,QAASC,IAAO,MAAOC,GAAM,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,aAAc,QAASC,aAAc,QAASC,aAAc,QAASC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,MAAOC,IAAO,MAAOC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAAOC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,KAAMC,IAAO,MAA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"}