{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import { readFile as origReadFile } from \"fs\";\nimport { promisify } from \"util\";\nimport { dirname, resolve as pathResolve, join } from \"path\";\n\nimport fileSize from \"filesize\";\nimport gzip from \"gzip-size\";\nimport terser from \"terser\";\nimport brotli from \"brotli-size\";\nimport pacote from \"pacote\";\n\nconst readFile = promisify(origReadFile);\n\nconst isWindows = process.platform === \"win32\";\n\nfunction fixWindowsPath(path) {\n\treturn path.slice(\n\t\t// istanbul ignore next\n\t\tisWindows ? 1 : 0\n\t);\n}\n\n// Node should be ok with this, but transpiling\n//  to `require` doesn't work, so detect Windows\n//  to remove slash instead\n// \"file://\" +\nconst thisDirectory = fixWindowsPath(\n\tdirname(new URL(import.meta.url).pathname)\n);\n\nexport default function filesize(options = {}, env) {\n\tlet {\n\t\trender,\n\t\tformat = {},\n\t\ttheme = \"dark\",\n\t\tshowBeforeSizes = \"none\",\n\t\tshowGzippedSize = true,\n\t\tshowBrotliSize = false,\n\t\tshowMinifiedSize = true,\n\t} = options;\n\n\tconst getLoggingData = async function (outputOptions, bundle) {\n\t\tconst { code, fileName } = bundle;\n\t\tconst info = {};\n\n\t\tlet codeBefore;\n\t\tif (showBeforeSizes !== \"none\") {\n\t\t\tlet file = outputOptions.file || outputOptions.dest;\n\t\t\tif (showBeforeSizes !== \"build\") {\n\t\t\t\tconst { name } = await import(\n\t\t\t\t\tfixWindowsPath(join(process.cwd(), \"./package.json\"))\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\tconst output = join(thisDirectory, \"../.cache\");\n\n\t\t\t\t\tconst { resolved } = await pacote.extract(`${name}@latest`, output);\n\t\t\t\t\tconst idx = resolved.lastIndexOf(name);\n\t\t\t\t\tconst lastVersion = resolved.slice(\n\t\t\t\t\t\tidx + name.length + 1,\n\t\t\t\t\t\t-\".tgz\".length\n\t\t\t\t\t);\n\t\t\t\t\tinfo.lastVersion = lastVersion;\n\n\t\t\t\t\tfile = pathResolve(output, file);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Package might not exist\n\t\t\t\t\tfile = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (file) {\n\t\t\t\ttry {\n\t\t\t\t\tcodeBefore = await readFile(file, \"utf8\");\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// File might not exist\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinfo.fileName = fileName;\n\n\t\tinfo.bundleSize = fileSize(Buffer.byteLength(code), format);\n\n\t\tinfo.brotliSize = showBrotliSize\n\t\t\t? fileSize(await brotli(code), format)\n\t\t\t: \"\";\n\n\t\tif (showMinifiedSize || showGzippedSize) {\n\t\t\tconst minifiedCode = terser.minify(code).code;\n\t\t\tinfo.minSize = showMinifiedSize\n\t\t\t\t? fileSize(minifiedCode.length, format)\n\t\t\t\t: \"\";\n\t\t\tinfo.gzipSize = showGzippedSize\n\t\t\t\t? fileSize(gzip.sync(minifiedCode), format)\n\t\t\t\t: \"\";\n\t\t}\n\n\t\tif (codeBefore) {\n\t\t\tinfo.bundleSizeBefore = fileSize(Buffer.byteLength(codeBefore), format);\n\t\t\tinfo.brotliSizeBefore = showBrotliSize\n\t\t\t\t? fileSize(await brotli(codeBefore), format)\n\t\t\t\t: \"\";\n\t\t\tif (showMinifiedSize || showGzippedSize) {\n\t\t\t\tconst minifiedCode = terser.minify(codeBefore).code;\n\t\t\t\tinfo.minSizeBefore = showMinifiedSize\n\t\t\t\t\t? fileSize(minifiedCode.length, format)\n\t\t\t\t\t: \"\";\n\t\t\t\tinfo.gzipSizeBefore = showGzippedSize\n\t\t\t\t\t? fileSize(gzip.sync(minifiedCode), format)\n\t\t\t\t\t: \"\";\n\t\t\t}\n\t\t}\n\n\t\tconst opts = {\n\t\t\tformat,\n\t\t\ttheme,\n\t\t\trender,\n\t\t\tshowBeforeSizes,\n\t\t\tshowGzippedSize,\n\t\t\tshowBrotliSize,\n\t\t\tshowMinifiedSize,\n\t\t};\n\n\t\tif (render) {\n\t\t\tconsole.warn(\n\t\t\t\t\"`render` is now deprecated. Please use `reporter` instead.\"\n\t\t\t);\n\t\t\treturn opts.render(opts, outputOptions, info);\n\t\t}\n\n\t\tconst reporters = options.reporter\n\t\t\t? Array.isArray(options.reporter)\n\t\t\t\t? options.reporter\n\t\t\t\t: [options.reporter]\n\t\t\t: [\"boxen\"];\n\n\t\treturn (\n\t\t\tawait Promise.all(\n\t\t\t\treporters.map(async (reporter) => {\n\t\t\t\t\tif (typeof reporter === \"string\") {\n\t\t\t\t\t\tlet p;\n\t\t\t\t\t\tif (reporter === \"boxen\") {\n\t\t\t\t\t\t\tp = import(thisDirectory + \"/reporters/boxen.js\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tp = import(fixWindowsPath(pathResolve(process.cwd(), reporter)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treporter = (await p).default;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reporter(opts, outputOptions, info);\n\t\t\t\t})\n\t\t\t)\n\t\t).join(\"\");\n\t};\n\n\tif (env === \"test\") {\n\t\treturn getLoggingData;\n\t}\n\n\treturn {\n\t\tname: \"filesize\",\n\t\tasync generateBundle(outputOptions, bundle /* , isWrite */) {\n\t\t\tconst dataStrs = await Promise.all(\n\t\t\t\tObject.keys(bundle)\n\t\t\t\t\t.map((fileName) => bundle[fileName])\n\t\t\t\t\t.filter((currentBundle) => {\n\t\t\t\t\t\tif ({}.hasOwnProperty.call(currentBundle, \"type\")) {\n\t\t\t\t\t\t\treturn currentBundle.type !== \"asset\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn !currentBundle.isAsset;\n\t\t\t\t\t})\n\t\t\t\t\t.map((currentBundle) => {\n\t\t\t\t\t\treturn getLoggingData(outputOptions, currentBundle);\n\t\t\t\t\t})\n\t\t\t);\n\t\t\tdataStrs.forEach((str) => {\n\t\t\t\tif (str) {\n\t\t\t\t\tconsole.log(str);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n"],"names":["readFile","promisify","origReadFile","isWindows","process","platform","fixWindowsPath","path","slice","thisDirectory","dirname","URL","import","pathname","filesize","options","env","render","format","theme","showBeforeSizes","showGzippedSize","showBrotliSize","showMinifiedSize","getLoggingData","outputOptions","bundle","code","fileName","info","codeBefore","file","dest","name","join","cwd","output","resolved","pacote","extract","idx","lastIndexOf","lastVersion","length","pathResolve","err","bundleSize","fileSize","Buffer","byteLength","brotliSize","brotli","minifiedCode","terser","minify","minSize","gzipSize","gzip","sync","bundleSizeBefore","brotliSizeBefore","minSizeBefore","gzipSizeBefore","opts","console","warn","reporters","reporter","Array","isArray","Promise","all","map","p","default","generateBundle","dataStrs","Object","keys","filter","currentBundle","hasOwnProperty","call","type","isAsset","forEach","str","log"],"mappings":"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"}